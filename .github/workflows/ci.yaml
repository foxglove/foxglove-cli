name: CI

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: install go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.45.2
      - name: lint code
        run: make lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: install go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Checkout code
        uses: actions/checkout@v3
      - run: git lfs pull
      - name: run tests
        run:  make test
  release:
    permissions:
      contents: write
    needs:
      - lint
      - test
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    strategy:
      matrix:
        include:
          - os: linux
            image: ubuntu-latest
            arch: amd64
            env: {}
          - os: linux
            image: ubuntu-latest
            arch: arm64
            env: {}
          - os: macos
            image: macos-latest
            arch: amd64
            env: {}
          - os: macos
            image: macos-latest
            arch: arm64
            env: {}
          - os: windows
            image: windows-latest
            arch: amd64
            env: {}
          - os: windows
            image: windows-latest
            arch: arm64
            env: {}
        name: Build (${{ matrix.os }}/${{ matrix.arch }})
        runs-on: ${{ matrix.image }}
        env: ${{ matrix.env }}

        steps:
          - uses: actions/checkout@v3
            with: fetch-depth: "0"
          - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
          - uses: actions/setup-go@v3
            with:
              go-version: 1.18.x
          - name: Setup environment
            run: ${{ matrix.setup }}
          - name: Build binary
            run: make -C foxglove build-release
            env:
              GOARCH: ${{ matrix.arch }}
              BINARY_NAME: foxglove-${{ matrix.os }}-${{ matrix.arch }}
          - name: Generate release notes
            run: |
              git log --oneline --no-merges --first-parent --decorate-refs=refs $(git describe --tags --abbrev=0)..HEAD > ${{ github.workspace }}-CHANGELOG.txt
          - name: Releaase
            uses: softprops/action-gh-release@v1
            with:
              files: foxglove/bin/*
              body_path: ${{ github.workspace }}-CHANGELOG.txt
              draft: false
